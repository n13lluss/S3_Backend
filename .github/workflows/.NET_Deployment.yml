name: .NET Workflow

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Install dependencies
        run: dotnet restore

      - name: Build project
        run: dotnet build --no-incremental

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Run tests
        run: dotnet test Travelblog.Unittest/Travelblog.Tests.csproj --no-build

  coverage:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Install dotnet-coverage tool
        run: dotnet tool install --global dotnet-coverage

      - name: Collect code coverage
        run: dotnet-coverage collect "dotnet test Travelblog.Unittest/Travelblog.Tests.csproj --no-build" -f xml -o "coverage.xml"

      - name: Print coverage file
        run: cat coverage.xml

      - name: Upload code coverage
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage
          path: coverage.xml

  code_analysis:
    runs-on: ubuntu-latest
    needs: coverage
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Install dotnet-sonarscanner
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Download code coverage
        uses: actions/download-artifact@v3
        with:
          name: code-coverage
          path: .

      - name: SonarScanner begin
        run: dotnet sonarscanner begin /k:"semester-3_backend" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.cs.vscoveragexml.reportsPaths="coverage.xml"

      - name: Build project
        run: dotnet build --no-incremental

      - name: Collect code coverage
        run: dotnet-coverage collect "dotnet test Travelblog.Unittest/Travelblog.Tests.csproj --no-build" -f xml -o "coverage.xml"

      - name: SonarScanner end
        run: dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
