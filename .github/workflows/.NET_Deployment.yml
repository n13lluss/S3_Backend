name: .NET build, test, and coverage

on:
  pull_request:
    branches: [ "master", "Develop" ]
  push:
    branches: [ "Develop", "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore S3_Backend/Travelblog.sln

    - name: Build
      run: dotnet build S3_Backend/Travelblog.Api/Travelblog.Api.csproj --no-restore

    - name: Test
      run: dotnet test S3_Backend/Travelblog.Unittest/Travelblog.Tests.csproj --verbosity normal --collect:"XPlat Code Coverage" --logger trx --results-directory ./coverage

    - name: Code Coverage Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: ./coverage/**/*.cobertura.xml
        badge: true
        fail_below_min: true
        format: markdown
        hide_branch_rate: false
        hide_complexity: true
        indicators: true
        output: both
        thresholds: '60 80'
  
    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request'
      with:
          recreate: true
          path: code-coverage-results.md
  
    - name: Write to Job Summary
      run: cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY

    - name: Begin SonarCloud analysis
      run: dotnet sonarscanner begin /k:"semester-3-backend" /o:"semester-3" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths="./coverage/coverage.cobertura.xml"
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: Build solution for analysis
      run: dotnet build --no-restore --configuration Release S3_Backend/Travelblog.Core/Travelblog.Core.csproj

    - name: End SonarCloud analysis
      run: dotnet sonarscanner end
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
