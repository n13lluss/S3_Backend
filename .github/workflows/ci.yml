name: .NET build, test, and coverage

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build, Test, and Analyze with SonarCloud
    runs-on: windows-latest

    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create SonarCloud cache directories
        run: |
          mkdir -p ~/sonar/cache
          mkdir -p ./.sonar/scanner

      - name: Print directory structure
        run: |
          ls -l ~
          ls -l ./.sonar

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          fail-on-cache-miss: true

      - name: Cache SonarCloud scanner
        uses: actions/cache@v3
        with:
          path: ./.sonar/scanner 
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
          fail-on-cache-miss: true

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner

      - name: Install dotnet-coverage
        shell: powershell
        run: |
          dotnet tool install --global dotnet-coverage

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore TravelblogBackend.sln

      - name: Build
        run: dotnet build Travelblog.Api/Travelblog.Api.csproj --configuration Release --no-restore

      - name: Test
        run: dotnet test Travelblog.Unittest/Travelblog.Tests.csproj --verbosity normal --collect:"XPlat Code Coverage" --logger trx --results-directory ./coverage

      - name: Build and analyze with dotnet-coverage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          ./.sonar/scanner/dotnet-sonarscanner begin /k:"semester-3-backend" /o:"semester-3" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths="coverage.xml"
          dotnet-coverage collect "dotnet test" -f xml -o "coverage.xml"
          ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: ./coverage/**/*.cobertura.xml
          badge: true
          fail_below_min: false
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
  
      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md
  
      - name: Write to Job Summary
        run: cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY

      - name: Upload Code Coverage
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage
          path: ./coverage
