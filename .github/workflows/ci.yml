name: SonarCloud Analysis

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarcloud:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetch the entire history to avoid shallow clone issues

      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '8.x'  # Install the .NET SDK 8.x

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build the solution
        run: dotnet build --no-restore --configuration Release

      - name: Install Coverlet tool
        run: dotnet tool install --global coverlet.console

      - name: Run tests and collect coverage
        run: |
          dotnet test --no-build --configuration Release --collect:"XPlat Code Coverage"
          coverlet ./path/to/test/project/bin/Release/net6.0/YourTestAssembly.dll --target "dotnet" --targetargs "test --no-build --configuration Release" --format opencover --output "coverage.opencover.xml"

      - name: Install SonarScanner Global Tool
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Add .NET tools to PATH
        run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Begin SonarCloud Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: dotnet sonarscanner begin /k:"semester-3-backend" /o:"semester-3" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.cs.opencover.reportsPaths="coverage.opencover.xml"

      - name: Build the solution (SonarCloud)
        run: dotnet build --no-incremental --configuration Release

      - name: End SonarCloud Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
